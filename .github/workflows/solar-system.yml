name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
 
# Define secrets at the workflow level so that they can be resuable across all jobs

env:
    MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
    MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
    MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
    unit-testing:
        name: Unit Testing
        # Add a Matrix strategy to test on several operating systems
        strategy:
            matrix:
                nodejs_version: [18, 19, 20]
                operating_system: [ubuntu-latest, macos-latest]
                exclude: 
                    - nodejs_version: 18
                      operating_system: macos-latest
        #use matrix.operating_system to tun jobs since you are now using matrix strategy
        runs-on: ${{ matrix.operating_system }}   
        #runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version - ${{ matrix.nodejs_version}}
          uses: actions/setup-node@v3
          with:
            #node-version: 20
            node-version: ${{ matrix.nodejs_version}}
    
            # npm install
        - name: Install Dependencies
          run: npm install
    
          # perform unit testing
        - name: Unit Testing
          id: nodejs-unit-testing-step # give a unique id to be used as reference in next step
          run: npm test

          #Use upload-artifact to archive the test result so you can download it to your system
          
        - name: Archive Test Result
          # use if condition to skip this step even if the previous step fail or succeed. 
          #if failure() && (steps.nodejs-unit-testing-step.outcome == 'failure' || steps.nodejs-unit-testing-step.outcome == 'success')
          #Add always function to make the step run regardless of the status of the previous step
          if: always()
          uses: actions/upload-artifact@v3
          with:
            name: Mocha-Test-Result
            path: test-results.xml 

    code-coverage:
        name: Code Coverage
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4

            - name: Setup Nodejs Version - 18
              uses: actions/setup-node@v3
              with: 
                node-version: 18
            
            - name: Install Dependencies
              run: npm install

            - name: Check Code Coverage
              continue-on-error: true  # use continue on error to conitnue to run the workflow even if this step fails
              run: npm run coverage
                #The command npm run coverage is typically used in a Node.js project to 
                # generate code coverage reports for your tests
            - name: Archive Test Result
              uses: actions/upload-artifact@v3
              with:
                name: Code-Coverage-Result
                path: coverage
                retention-days: 5


        # Use expressions to programmatically execute jobs and steps based on conditions
